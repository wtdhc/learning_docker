version: '3.8'

services:
  # ---------------------------
  # API Gateway
  # ---------------------------
  api-gateway:
    container_name: "api-gateway"
    hostname: "api-gateway"
    build: ../application/api-gateway/target
    ports:
      - "8080:8080"
    expose:
      - "8080" 
    depends_on:
      - consul
    environment:
      - SPRING_PROFILES_ACTIVE=${profile}
    networks:
      - backend

  # ---------------------------
  # Service One
  # ---------------------------
  service-one:
    container_name: "service-one"
    hostname: "service-one"
    build: ../application/service-one/target
    ports:
      - "8082:8082"
    depends_on:
      - rabbit
      - service-one-db
      - consul
    environment:
      - SPRING_PROFILES_ACTIVE=${profile}
    networks:
      - backend

  # ---------------------------
  # Service One Database
  # ---------------------------
  service-one-db:
    container_name: "service-one-db"
    hostname: "serviceonedb"
    image: "mongo:3.7"
    environment:
      - MONGODB_USER="service-one" 
      - MONGODB_PASS="service-one"
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    expose:
      - "27017"
    command: mongod --smallfiles 
    #--logpath=/dev/null --sslDisabledProtocols 'none'
    networks:
      - backend

  # ---------------------------
  # Service Two
  # ---------------------------
  service-two:
    container_name: "service-two"
    hostname: "service-two"
    build: ../application/service-two/target
    ports:
      - "8084:8084"
    depends_on:
      - rabbit
      - service-two-db
      - consul
    environment:
      - SPRING_PROFILES_ACTIVE=${profile}
    networks:
      - backend

  # ---------------------------
  # Service Two Database
  # ---------------------------
  service-two-db:
    container_name: "service-two-db"
    hostname: "servicetwodb"
    image: "mysql/mysql-server:5.7"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=service-two
      - MYSQL_USER=service-two 
      - MYSQL_PASSWORD=service-two
    ports:
      - "3310:3306"
    expose:
      - "3310"
    networks:
      - backend

  # ---------------------------
  # Web Application
  # ---------------------------
  web-application:
    container_name: web-application
    image: nginx:1.18.0-alpine
    build:
      context: ../application/web-application
      dockerfile: Dockerfile
    volumes:
      - ./dist:/usr/share/nginx/html
    ports:
      - "80:4200"

    networks:
      - frontend

  # ---------------------------
  # Messaging Queue Cluster
  # ---------------------------
  rabbit:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbit-mq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "15672"
    environment:
      - CLUSTERED=true
      - RAM_NODE=true
      - CLUSTER_WITH=rabbit
      - RABBITMQ_DEFAULT_USER=docker
      - RABBITMQ_DEFAULT_PASS=docker
    networks:
      - backend

  # ---------------------------
  # Registration and
  # Discovery Cluster
  # ---------------------------
  consul:
    image: consul:1.7.3
    container_name: "consul"
    hostname: "consul"
    command: consul agent -server -client 0.0.0.0 -ui -bootstrap-expect=1 -data-dir=/consul/data -datacenter=blr
    ports:
      - "8500:8500"
      - "8600:8600"
    expose:
      - "8500"
      - "8600"
    networks:
      - backenddocker network create -d bridge build_backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodata:
  